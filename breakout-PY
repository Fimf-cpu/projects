#Dean.k|2/12/25
import pygame
import random
pygame.init()

screen = pygame.display.set_mode((700,500))
pygame.display.set_caption("BREAKOUT")

doExit = False
clock = pygame.time.Clock()
px = 350
py = 450

bx = 350
by = 250
bVx = 5
bVy = 5

score = 0

font = pygame.font.Font(None, 36)
font2 = pygame.font.Font(None, 72)

class brick:
    def __init__(self, xpos, ypos):
        self.xpos = xpos
        self.ypos =ypos
        self.color = (random.randrange(100, 250),random.randrange(100, 250),random.randrange(100, 250))
        self.isdead = False
    
    def draw(self):
        if not self.isdead:
            pygame.draw.rect(screen, self.color, (self.xpos, self.ypos, 100, 50))
    
    def collide(self, bx, by):
        if not self.isdead:
            if (bx + 5 > self.xpos and
                bx < self.xpos + 100 and
                by + 5 > self.ypos and
                by < self.ypos + 50):
                self.isdead = True
                return True
            return False

b1 = brick(25, 50)
b2 = brick(135, 50)
b3 = brick(245, 50)
b4 = brick(355, 50)
b5 = brick(465, 50)
b6 = brick(575, 50)
b7 = brick(25, 150)
b8 = brick(135, 150)
b9 = brick(245, 150)
b10 = brick(355, 150)
b11 = brick(465, 150)
b12 = brick(575, 150)

while not doExit:#game loop--------------------------------------------
    clock.tick(60)
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            doExit = True
    #game logic------------------------------------------------------------
    #Ball-----------------
    bx += bVx
    by += bVy
    
    if bx < 0 or bx > 700:
        bVx *= -1
    if by < 0:
        bVy *= -1
    #player---------------
    keys = pygame.key.get_pressed()
    if keys[pygame.K_a]:
        px-=5
    if keys[pygame.K_d]:
        px+=5
    #physics--------------
    if by > py - 5 and bx > px and bx < px + 150:
        bVy *= -1
    
    if b1.collide(bx, by):
        bVy *= -1
        score += 1
    if b2.collide(bx, by):
        bVy *= -1
        score += 1
    if b3.collide(bx, by):
        bVy *= -1
        score += 1
    if b4.collide(bx, by):
        bVy *= -1
        score += 1
    if b5.collide(bx, by):
        bVy *= -1
        score += 1
    if b6.collide(bx, by):
        bVy *= -1
        score += 1
    if b7.collide(bx, by):
        bVy *= -1
        score += 1
    if b8.collide(bx, by):
        bVy *= -1
        score += 1
    if b9.collide(bx, by):
        bVy *= -1
        score += 1
    if b10.collide(bx, by):
        bVy *= -1
        score += 1
    if b11.collide(bx, by):
        bVy *= -1
        score += 1
    if b12.collide(bx, by):
        bVy *= -1
        score += 1
    #render----------------------------------------------------------------
    screen.fill((0,0,0))
    
    pygame.draw.circle(screen, (255,255,255), (bx,by),5)
    
    pygame.draw.rect(screen, (255,255,255), (px, py, 150, 20),5)
    
    
    b1.draw()
    b2.draw()
    b3.draw()
    b4.draw()
    b5.draw()
    b6.draw()
    b7.draw()
    b8.draw()
    b9.draw()
    b10.draw()
    b11.draw()
    b12.draw()
    
    score_text = font.render("Score:", True, (255, 255, 255))
    screen.blit(score_text, (550, 20))
    score_text2 = font.render(str(score), True, (255, 255, 255))
    screen.blit(score_text2, (650, 20))
    
    pygame.display.flip()
pygame.quit()
